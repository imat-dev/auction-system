/* eslint-disable */
export default async () => {
    const t = {
        ["./auth/entity/user.entity"]: await import("./auth/entity/user.entity"),
        ["./auction/entity/items.entity"]: await import("./auction/entity/items.entity"),
        ["./auction/entity/bid.entity"]: await import("./auction/entity/bid.entity")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./auction/entity/bid.entity"), { "Bid": { id: { required: true, type: () => Number }, user: { required: true, type: () => t["./auth/entity/user.entity"].User }, item: { required: true, type: () => t["./auction/entity/items.entity"].Item }, bidAmount: { required: true, type: () => Number }, dateCreated: { required: true, type: () => Date }, dateUpdated: { required: true, type: () => Date }, isRefunded: { required: true, type: () => Boolean } } }], [import("./auction/entity/items.entity"), { "Item": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, startingPrice: { required: true, type: () => Number }, windowTime: { required: true, type: () => Number }, status: { required: true, enum: t["./auction/entity/items.entity"].Status }, owner: { required: true, type: () => t["./auth/entity/user.entity"].User }, highestBidder: { required: true, type: () => t["./auth/entity/user.entity"].User }, highestBid: { required: true, type: () => Number }, bids: { required: true, type: () => [t["./auction/entity/bid.entity"].Bid] }, dateCreated: { required: true, type: () => Date }, dateUpdated: { required: true, type: () => Date }, auctionStartDate: { required: true, type: () => Date }, refundJobId: { required: true, type: () => String }, isRefundJobCompleted: { required: true, type: () => Boolean } } }], [import("./auth/entity/user.entity"), { "User": { id: { required: true, type: () => Number }, email: { required: true, type: () => String }, password: { required: true, type: () => String }, balance: { required: true, type: () => Number }, items: { required: true, type: () => [t["./auction/entity/items.entity"].Item] }, highestBidItems: { required: true, type: () => [t["./auction/entity/items.entity"].Item] }, bids: { required: true, type: () => [t["./auction/entity/bid.entity"].Bid] } } }], [import("./auth/dto/create-user.dto"), { "CreateUserDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 6, maxLength: 20 } } }], [import("./deposit/dto/create-deposit.dto"), { "CreateDepositDto": { amount: { required: true, type: () => Number } } }], [import("./auction/dto/place-bid.dto"), { "PlaceBidDto": { bidAmount: { required: true, type: () => Number } } }], [import("./auction/dto/update-bid.dto"), { "UpdateBidDto": { bidAmount: { required: true, type: () => Number } } }], [import("./auction/dto/create-item.dto"), { "CreateItemDto": { name: { required: true, type: () => String }, startingPrice: { required: true, type: () => Number }, windowTime: { required: true, type: () => Number, minimum: 1 } } }], [import("./auction/dto/update-item.dto"), { "UpdateItemDto": { status: { required: true, enum: t["./auction/entity/items.entity"].Status } } }]], "controllers": [[import("./auth/auth.controller"), { "AuthController": { "login": {}, "getProfile": { type: t["./auth/entity/user.entity"].User } } }], [import("./auth/user.controller"), { "UserController": { "register": {} } }], [import("./deposit/deposit.controller"), { "DepositController": { "create": { type: t["./auth/entity/user.entity"].User } } }], [import("./auction/bid.controller"), { "BidController": { "getBid": { type: t["./auction/entity/bid.entity"].Bid }, "placeBid": {}, "upateBid": {} } }], [import("./auction/auction.controller"), { "AuctionController": { "findAll": { type: [t["./auction/entity/items.entity"].Item] }, "findByUser": { type: [t["./auction/entity/items.entity"].Item] }, "create": { type: t["./auction/entity/items.entity"].Item }, "startAuction": { type: t["./auction/entity/items.entity"].Item } } }]] } };
};